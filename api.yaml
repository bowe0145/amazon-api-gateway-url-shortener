# Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

openapi: "3.0.1"
info:
  title: "URL Shortener API"
  version: "1.0.0"

x-amazon-apigateway-request-validators:
  all:
    validateRequestBody: false
    validateRequestParameters: false
  params:
    validateRequestBody: false
    validateRequestParameters: false
  body:
    validateRequestBody: false
    validateRequestParameters: false

paths:
  /{linkId}:
    ## URL redirector
    get:
      summary: Get a url by ID and redirect
      x-amazon-apigateway-request-validator: params
      parameters:
        - in: path
          name: linkId
          schema:
            type: string
          required: true
          description: Short link ID for full URL
      responses:
        "301":
          description: "301 redirect"
          headers:
            Location:
              type: "string"
            Cache-Control:
              type: "string"

      ## API Gateway Integration
      x-amazon-apigateway-integration:
        credentials:
          Fn::GetAtt: [DDBReadRole, Arn]
        uri:
          {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:dynamodb:action/GetItem",
          }
        httpMethod: "POST"
        requestTemplates:
          application/json:
            {
              "Fn::Sub": '{"Key": {"id": {"S": "$input.params().path.linkId"}}, "TableName": "${LinkTable}"}',
            }
        passthroughBehavior: "when_no_templates"
        responses:
          "200":
            statusCode: "301"
            responseParameters:
              method.response.header.Location:
                {
                  "Fn::Sub":
                    [
                      "'master.${ampDomain}?error=url_not_found'",
                      {
                        "ampDomain":
                          { "Fn::GetAtt": ["AmplifyApp", "DefaultDomain"] },
                      },
                    ],
                }
              method.response.header.Cache-Control: "'max-age=300'"
            responseTemplates:
              application/json: "#set($inputRoot = $input.path('$')) \
                #if($inputRoot.toString().contains(\"Item\")) \
                #set($context.responseOverride.header.Location = $inputRoot.Item.url.S) \
                #end"
        type: "aws"

## Validation models
components:
  schemas:
    PostBody:
      type: object
      properties:
        id:
          type: string
        url:
          type: string
          pattern: ^https?://[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)
      required:
        - id
        - url
  parameters:
    authHeader:
      in: header
      name: Authorization
      required: false
      description: Contains authorization token
      schema:
        type: string
    linkIdHeader:
      in: path
      name: linkId
      required: true
      description: Short link ID for full URL
      schema:
        type: string

## Authorizer definition
securityDefinitions:
  UserAuthorizer:
    type: "apiKey"
    name: "Authorization"
    in: "header"
    x-amazon-apigateway-authtype: "cognito_user_pools"
    x-amazon-apigateway-authorizer:
      providerARNs:
        - Fn::GetAtt: [UserPool, Arn]
      type: "cognito_user_pools"
